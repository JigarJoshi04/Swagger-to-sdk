//
// MeAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class MeAPI {
    /**
     Get the usergroups of caller

     - parameter pageCursor: (query) Cursor to fetch next paginated items (optional)
     - parameter pageSize: (query) Max number of items to return in a page (optional, default to 20)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getMeUsergroups(pageCursor: String? = nil, pageSize: Int? = nil, completion: @escaping ((_ data: UserGroupList?,_ error: Error?) -> Void)) {
        getMeUsergroupsWithRequestBuilder(pageCursor: pageCursor, pageSize: pageSize).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get the usergroups of caller
     - GET /me/usergroups

     - :
       - type: http
       - name: service_auth
     - examples: [{contentType=application/json, example={
  "data" : [ {
    "relationships" : {
      "authorizedAs" : {
        "data" : [ {
          "id" : "38c5b37e-1143-4760-98b9-0bf15fdf2c6f",
          "type" : "Role"
        }, {
          "id" : "38c5b37e-1143-4760-98b9-0bf15fdf2c6f",
          "type" : "Role"
        } ]
      },
      "hasAccessTo" : {
        "data" : [ {
          "id" : "e0e662a9-c7a9-495a-a345-e06436d41941",
          "type" : "Partition"
        }, {
          "id" : "e0e662a9-c7a9-495a-a345-e06436d41941",
          "type" : "Partition"
        } ]
      },
      "ownedBy" : {
        "data" : {
          "id" : "fee69bee-d108-4c30-9595-47d40b1e24ed",
          "type" : "Customer"
        }
      }
    },
    "attributes" : {
      "isMachineEnabled" : true,
      "isSystemDefined" : true,
      "name" : "CustomerOperator",
      "description" : "Customer Operator for managing user groups"
    },
    "id" : "f68a9762-9679-4c17-9012-ec9271f4087f",
    "type" : "UserGroup"
  }, {
    "relationships" : {
      "authorizedAs" : {
        "data" : [ {
          "id" : "38c5b37e-1143-4760-98b9-0bf15fdf2c6f",
          "type" : "Role"
        }, {
          "id" : "38c5b37e-1143-4760-98b9-0bf15fdf2c6f",
          "type" : "Role"
        } ]
      },
      "hasAccessTo" : {
        "data" : [ {
          "id" : "e0e662a9-c7a9-495a-a345-e06436d41941",
          "type" : "Partition"
        }, {
          "id" : "e0e662a9-c7a9-495a-a345-e06436d41941",
          "type" : "Partition"
        } ]
      },
      "ownedBy" : {
        "data" : {
          "id" : "fee69bee-d108-4c30-9595-47d40b1e24ed",
          "type" : "Customer"
        }
      }
    },
    "attributes" : {
      "isMachineEnabled" : true,
      "isSystemDefined" : true,
      "name" : "CustomerOperator",
      "description" : "Customer Operator for managing user groups"
    },
    "id" : "f68a9762-9679-4c17-9012-ec9271f4087f",
    "type" : "UserGroup"
  } ],
  "links" : {
    "next" : "/me/usergroups?page[cursor]=qwerty",
    "self" : "/me/usergroups"
  }
}}]
     - parameter pageCursor: (query) Cursor to fetch next paginated items (optional)
     - parameter pageSize: (query) Max number of items to return in a page (optional, default to 20)

     - returns: RequestBuilder<UserGroupList> 
     */
    open class func getMeUsergroupsWithRequestBuilder(pageCursor: String? = nil, pageSize: Int? = nil) -> RequestBuilder<UserGroupList> {
        let path = "/me/usergroups"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "page[cursor]": pageCursor, 
                        "page[size]": pageSize?.encodeToJSON()
        ])


        let requestBuilder: RequestBuilder<UserGroupList>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
