=begin
#Accounts API

#Accounts API 

OpenAPI spec version: 0.9.5

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.27
=end

module SwaggerClient
  class MeApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get the usergroups of caller
    # Return list of the usergroup (user identity inferred from the SUB in the token) 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page_cursor Cursor to fetch next paginated items
    # @option opts [Integer] :page_size Max number of items to return in a page (default to 20)
    # @return [UserGroupList]
    def get_me_usergroups(opts = {})
      data, _status_code, _headers = get_me_usergroups_with_http_info(opts)
      data
    end

    # Get the usergroups of caller
    # Return list of the usergroup (user identity inferred from the SUB in the token) 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :page_cursor Cursor to fetch next paginated items
    # @option opts [Integer] :page_size Max number of items to return in a page
    # @return [Array<(UserGroupList, Integer, Hash)>] UserGroupList data, response status code and response headers
    def get_me_usergroups_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: MeApi.get_me_usergroups ...'
      end
      # resource path
      local_var_path = '/me/usergroups'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'page[cursor]'] = opts[:'page_cursor'] if !opts[:'page_cursor'].nil?
      query_params[:'page[size]'] = opts[:'page_size'] if !opts[:'page_size'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/vnd.api+json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:body] 

      return_type = opts[:return_type] || 'UserGroupList' 

      auth_names = opts[:auth_names] || ['service_auth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type)

      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: MeApi#get_me_usergroups\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
