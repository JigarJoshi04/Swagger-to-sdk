# coding: utf-8

"""
    Accounts API

    Accounts API   # noqa: E501

    OpenAPI spec version: 0.9.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class UserResponseAttributesProfile(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'free_text': 'str',
        'job_description': 'str',
        'phone': 'str',
        'profile_image': 'str'
    }

    attribute_map = {
        'free_text': 'freeText',
        'job_description': 'jobDescription',
        'phone': 'phone',
        'profile_image': 'profileImage'
    }

    def __init__(self, free_text=None, job_description=None, phone=None, profile_image=None):  # noqa: E501
        """UserResponseAttributesProfile - a model defined in Swagger"""  # noqa: E501
        self._free_text = None
        self._job_description = None
        self._phone = None
        self._profile_image = None
        self.discriminator = None
        if free_text is not None:
            self.free_text = free_text
        if job_description is not None:
            self.job_description = job_description
        if phone is not None:
            self.phone = phone
        if profile_image is not None:
            self.profile_image = profile_image

    @property
    def free_text(self):
        """Gets the free_text of this UserResponseAttributesProfile.  # noqa: E501

        free text user info  # noqa: E501

        :return: The free_text of this UserResponseAttributesProfile.  # noqa: E501
        :rtype: str
        """
        return self._free_text

    @free_text.setter
    def free_text(self, free_text):
        """Sets the free_text of this UserResponseAttributesProfile.

        free text user info  # noqa: E501

        :param free_text: The free_text of this UserResponseAttributesProfile.  # noqa: E501
        :type: str
        """

        self._free_text = free_text

    @property
    def job_description(self):
        """Gets the job_description of this UserResponseAttributesProfile.  # noqa: E501

        user's job description  # noqa: E501

        :return: The job_description of this UserResponseAttributesProfile.  # noqa: E501
        :rtype: str
        """
        return self._job_description

    @job_description.setter
    def job_description(self, job_description):
        """Sets the job_description of this UserResponseAttributesProfile.

        user's job description  # noqa: E501

        :param job_description: The job_description of this UserResponseAttributesProfile.  # noqa: E501
        :type: str
        """

        self._job_description = job_description

    @property
    def phone(self):
        """Gets the phone of this UserResponseAttributesProfile.  # noqa: E501

        user's contact phone number  # noqa: E501

        :return: The phone of this UserResponseAttributesProfile.  # noqa: E501
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this UserResponseAttributesProfile.

        user's contact phone number  # noqa: E501

        :param phone: The phone of this UserResponseAttributesProfile.  # noqa: E501
        :type: str
        """

        self._phone = phone

    @property
    def profile_image(self):
        """Gets the profile_image of this UserResponseAttributesProfile.  # noqa: E501

        user's profile image  # noqa: E501

        :return: The profile_image of this UserResponseAttributesProfile.  # noqa: E501
        :rtype: str
        """
        return self._profile_image

    @profile_image.setter
    def profile_image(self, profile_image):
        """Sets the profile_image of this UserResponseAttributesProfile.

        user's profile image  # noqa: E501

        :param profile_image: The profile_image of this UserResponseAttributesProfile.  # noqa: E501
        :type: str
        """

        self._profile_image = profile_image

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(UserResponseAttributesProfile, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UserResponseAttributesProfile):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
